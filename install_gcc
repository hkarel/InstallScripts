#!/bin/sh

# Для того чтобы не удалять директорию сборки $src_dir после выполнения
# инсталляции необходимо выставить первый параметр сценария не равным 0.

set -u

ver=6.4.0
not_remove_dir=
print_help=

display_help()
{
cat << EOF
Usage: ${0##*/} [hnv]
  -h --help     display this help and exit
  -n --not-rm   not remove a gcc-directory after compilation
  -v --gcc-vers GCC version
  Current build parameters:
    version:     $ver (accessible values: 5.4.0, 5.5.0, 6.4.0)
    archive:     $archive
    archive dir: $archive_dir
    src dir:     $src_dir
    prefix:      $prefix
EOF
}

# Обработка позиционных параметров:
#    http://wiki.bash-hackers.org/scripting/posparams
while test -n ${1:-""}
do
    case "$1" in
        -h|--help)
            print_help=yes
            shift
            ;;
        -n|--not-rm)
            not_remove_dir=yes
            shift 2
            ;;
        -v|--version)
            ver=$2
            shift 2
            ;;
        -*)
            echo "Error: Unknown option: $1" >&2
            exit 1
            ;;
        *)  # No more options
            break
            ;;
    esac
done

archive_dir=$PWD
archive=gcc-${ver}.tar.xz
if [ "${ver}" = "5.4.0" ]; then
    archive=gcc-${ver}.tar.bz2
fi
src_dir=gcc-${ver}
prefix=/opt/gcc/${ver}

if [ "$print_help" = "yes" ]; then
    display_help
    exit 0
fi

# Определение параметров host-системы
if [ ! -e $(dirname $0)/os_detect ]; then
    echo "Error: os_detect script not found."
    exit 1
fi
. $(dirname $0)/os_detect
# ---

MAKE=make
#[ "$os_type" = "FreeBSD" ] && MAKE=gmake

SUDO=
if [ "$os_name" = "Ubuntu" ] || [ "$os_name" = "Debian" ]; then
    [ "$(id -u)" -ne 0 ] && SUDO=sudo
else
    if [ "$(id -u)" -ne 0 ]; then
        echo "Error: Script must be running with root privileges"
        exit 1
    fi
fi

#if [ "$os_name" = "Ubuntu" ] || [ "$os_name" = "Debian" ]; then
#    $SUDO apt-get install -y chrpath binutils
#elif [ "$os_name" = "CentOS" ]; then
#    yum install -y chrpath binutils
#fi

which chrpath > /dev/null 2>&1
if [ "$?" -ne 0 ]; then
    echo "Error: Need install the chrpath utility"
    exit 1
fi

which readelf > /dev/null 2>&1
if [ "$?" -ne 0 ]; then
    echo "Error: Need install the readelf utility"
    exit 1
fi


remove_dir()
{
    cd $archive_dir
    if [ -d $src_dir ]; then
        echo "Remove directory $src_dir ..."
        rm -rf "$src_dir"
    fi
}

patch_libstdc_plusplus()
{
patch -p0 << 'EOF'
--- ./libstdc++-v3/configure-s	2014-03-20 22:57:07.000000000 +0400
+++ ./libstdc++-v3/configure	2016-02-02 12:07:23.622414727 +0300
@@ -20993,7 +20993,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -28028,7 +28028,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -34022,7 +34022,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -40098,7 +40098,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -51975,7 +51975,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"


     $as_echo "#define HAVE_SETENV 1" >>confdefs.h
@@ -52189,7 +52189,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -52664,7 +52664,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -58949,7 +58949,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -64865,7 +64865,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"


     $as_echo "#define HAVE_FINITEF 1" >>confdefs.h
@@ -65032,7 +65032,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"


     $as_echo "#define HAVE_COSF 1" >>confdefs.h
@@ -65260,7 +65260,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"



@@ -71176,7 +71176,7 @@
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi

-
+OPT_LDFLAGS="$OPT_LDFLAGS -Wl,-z,origin -Wl,-rpath,AORIGIN"


          $as_echo "#define HAVE_MBSTATE_T 1" >>confdefs.h

EOF
}

strip_debug_info()
{
    if [ ! -L $1 ]; then
        res=$(file $1 | grep -E 'LSB +shared object|ar archive|LSB +relocatable')
        if [ -n "$res" ]; then
            echo "Stripped: $1"
            $SUDO strip --strip-debug $1
            return
        fi

        res=$(file $1 | grep -E 'LSB +executable')
        if [ -n "$res" ]; then
            echo "Stripped: $1"
            $SUDO strip --strip-all $1
        fi
    fi
}

if [ ! -e $archive ]; then
    wget -c ftp://ftp.gnu.org/gnu/gcc/gcc-${ver}/${archive}
fi

set -e

remove_dir

echo "Extract $archive ..."
tar -xf $archive

cd $src_dir
patch_libstdc_plusplus

./contrib/download_prerequisites
mkdir -p build && cd build

../configure \
    --prefix=${prefix} \
    --disable-multilib \
    --enable-languages=c,c++

$MAKE -j$(nproc)

[ -d $prefix ] && $SUDO rm -rf $prefix

cd $archive_dir/$src_dir/build
$SUDO $MAKE install

set +e
echo "Removing debug info ... "
for f in $(find $prefix/bin     -type f); do strip_debug_info $f; done
for f in $(find $prefix/lib     -type f); do strip_debug_info $f; done
for f in $(find $prefix/libexec -type f); do strip_debug_info $f; done
[ -d $prefix/lib64 ] && for f in $(find $prefix/lib64 -type f); do strip_debug_info $f; done
set -e

echo "Create symlinks ... "
$SUDO ln -sf $prefix/bin/g++ /usr/bin/g++-${ver}
$SUDO ln -sf $prefix/bin/gcc /usr/bin/gcc-${ver}

# Не создаем больше линки, т.к. это вводит в ступор QBS-сборщик
#$SUDO ln -sr $prefix/bin/gcc-ar $prefix/bin/ar
#$SUDO ln -sr $prefix/bin/gcc-nm $prefix/bin/nm

echo "Replace AORIGIN on \$ORIGIN ... "
libstdc_file=
[ -e $prefix/lib/libstdc++.so.6   ] && libstdc_file=$prefix/lib/libstdc++.so.6
[ -e $prefix/lib64/libstdc++.so.6 ] && libstdc_file=$prefix/lib64/libstdc++.so.6

if [ -n "$libstdc_file" ]; then
    $SUDO chrpath -r '$ORIGIN' $libstdc_file
    # Проверка корректной замены $ORIGIN
    set +e
    res=$(readelf -a $libstdc_file | grep '$ORIGIN')
    if [ -z "$res" ]; then
        echo "Error: Not found \$ORIGIN in $libstdc_file"
        exit 1
    fi
    set -e
fi

# "Отключаем" локализацию сообщений
echo "Set only english messages ... "
$SUDO rm -rf $prefix/share/locale

# Проверка путей до библиотек:
echo "Check GCC library path: "
g++-${ver} --print-file-name=libstdc++.a

[ "$not_remove_dir" != "yes" ] && remove_dir
