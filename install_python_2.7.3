#!/bin/sh

set -e

sover=3
ver0=2.7
ver=${ver0}.${sover}
python_arch=Python-${ver}.tgz
python_dir=Python-${ver}
dest_dir=/opt/python/${ver}
inst_dir=$PWD/python

setuptools_arch=setuptools-5.4.1.tar.gz
setuptools_dir=setuptools-5.4.1

suds_arch=suds-0.4.tar.gz
suds_dir=suds-0.4

yapsy_arch=Yapsy-1.11.023.tar.gz
yapsy_dir=Yapsy-1.11.023

simplejson_arch=simplejson-3.6.0.tar.gz
simplejson_dir=simplejson-3.6.0

MAKE=make

if [ "$(id -u)" -ne 0 ]; then
    echo "Error: Script must be running with root privileges"
    exit 1
fi

os_type=$(uname -o)
if [ "$os_type" = "GNU/Linux" ]; then
    if [ -f /etc/redhat-release ]; then
        ident_file="/etc/redhat-release"
    elif [ -f /etc/issue ]; then
        ident_file="/etc/issue"
    else
        echo "Unknown linux distribution"
    fi
    os_name=$(head -n1 $ident_file | cut -d' ' -f1)
    if [ "$os_name" = "Ubuntu" ] || [ "$os_name" = "Debian" ]; then
        apt-get install -y unzip zlib1g-dev

    elif [ "$os_name" = "CentOS" ]; then
        yum install -y unzip
    fi

elif [ "$os_type" = "FreeBSD" ]; then
    MAKE=gmake
fi

mkdir -p $inst_dir
cd $inst_dir


remove_dirs()
{
    cd $inst_dir
    if [ -d $python_dir ]; then
        echo "Remove directory $python_dir ..."
        rm -rf $python_dir
    fi

    if [ -d $setuptools_dir ]; then
        echo "Remove directory $setuptools_dir ..."
        rm -rf $setuptools_dir
    fi

    if [ -d $suds_dir ]; then
        echo "Remove directory $suds_dir ..."
        rm -rf $suds_dir
    fi

    if [ -d $simplejson_dir ]; then
        echo "Remove directory $simplejson_dir ..."
        rm -rf $simplejson_dir
    fi

    if [ -d $yapsy_dir ]; then
        echo "Remove directory $yapsy_dir ..."
        rm -rf $yapsy_dir
    fi
}


# Патч под FreeBSD
# Source: http://svnweb.freebsd.org/ports/head/lang/python27/files/?pathrev=317865
# Revision: 317865
# Состоит из следующих файлов:
#   patch-configure
#   patch-Modules-_ctypes-libffi-configure
#   patch-Modules-fcntlmodule.c
#   patch-Python_thread__pthread.h

patch_python273_freebsd()
{
patch -p0 << 'EOF'
--- configure.orig  2013-01-14 13:38:53.000000000 +0000
+++ configure   2013-01-14 13:39:14.000000000 +0000
@@ -5642,8 +5642,8 @@
    BASECFLAGS="$BASECFLAGS $ac_arch_flags"
 fi

-# disable check for icc since it seems to pass, but generates a warning
-if test "$CC" = icc
+# disable check for icc and clang since it seems to pass, but generates a warning
+if test "$CC" = icc -o "$CC" = clang
 then
   ac_cv_opt_olimit_ok=no
 fi

--- Modules/_ctypes/libffi/configure.orig	2010-03-19 19:59:20.000000000 +0100
+++ Modules/_ctypes/libffi/configure	2011-03-06 09:20:16.000000000 +0100
@@ -6289,7 +6289,7 @@
   rm -rf conftest*
   ;;

-x86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \
+amd64-*-freebsd*|x86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \
 s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
   # Find out which ABI we are using.
   echo 'int i;' > conftest.$ac_ext
@@ -11275,6 +11275,9 @@
   powerpc-*-freebsd*)
 	TARGET=POWERPC_FREEBSD; TARGETDIR=powerpc
 	;;
+  powerpc64-*-freebsd*)
+	TARGET=POWERPC; TARGETDIR=powerpc
+	;;
   powerpc*-*-rtems*)
 	TARGET=POWERPC; TARGETDIR=powerpc
 	;;

--- Modules/fcntlmodule.c.orig  2010-08-14 16:36:54.991363730 +0800
+++ Modules/fcntlmodule.c   2010-08-14 16:41:05.555822031 +0800
@@ -97,20 +97,15 @@
 {
 #define IOCTL_BUFSZ 1024
     int fd;
-    /* In PyArg_ParseTuple below, we use the unsigned non-checked 'I'
+    /* In PyArg_ParseTuple below, we use the unsigned non-checked 'k'
        format for the 'code' parameter because Python turns 0x8000000
        into either a large positive number (PyLong or PyInt on 64-bit
        platforms) or a negative number on others (32-bit PyInt)
        whereas the system expects it to be a 32bit bit field value
        regardless of it being passed as an int or unsigned long on
-       various platforms.  See the termios.TIOCSWINSZ constant across
-       platforms for an example of thise.
-
-       If any of the 64bit platforms ever decide to use more than 32bits
-       in their unsigned long ioctl codes this will break and need
-       special casing based on the platform being built on.
+       various platforms.
      */
-    unsigned int code;
+    unsigned long code;
     int arg;
     int ret;
     char *str;
@@ -118,7 +113,7 @@
     int mutate_arg = 1;
     char buf[IOCTL_BUFSZ+1];  /* argument plus NUL byte */

-    if (PyArg_ParseTuple(args, "O&Iw#|i:ioctl",
+    if (PyArg_ParseTuple(args, "O&kw#|i:ioctl",
                          conv_descriptor, &fd, &code,
                          &str, &len, &mutate_arg)) {
         char *arg;
@@ -169,7 +164,7 @@
     }

     PyErr_Clear();
-    if (PyArg_ParseTuple(args, "O&Is#:ioctl",
+    if (PyArg_ParseTuple(args, "O&ks#:ioctl",
                          conv_descriptor, &fd, &code, &str, &len)) {
         if (len > IOCTL_BUFSZ) {
             PyErr_SetString(PyExc_ValueError,
@@ -191,7 +186,7 @@
     PyErr_Clear();
     arg = 0;
     if (!PyArg_ParseTuple(args,
-         "O&I|i;ioctl requires a file or file descriptor,"
+         "O&k|i;ioctl requires a file or file descriptor,"
          " an integer and optionally an integer or buffer argument",
                           conv_descriptor, &fd, &code, &arg)) {
       return NULL;

--- Python/thread_pthread.h.orig    2010-05-09 22:46:46.000000000 +0800
+++ Python/thread_pthread.h 2010-08-15 14:27:51.886823397 +0800
@@ -26,13 +26,18 @@
 #endif
 #endif

+#ifdef __FreeBSD__
+#include <osreldate.h>
+#endif
+
 /* The POSIX spec says that implementations supporting the sem_*
    family of functions must indicate this by defining
    _POSIX_SEMAPHORES. */
 #ifdef _POSIX_SEMAPHORES
 /* On FreeBSD 4.x, _POSIX_SEMAPHORES is defined empty, so
    we need to add 0 to make it work there as well. */
-#if (_POSIX_SEMAPHORES+0) == -1
+#if defined(__FreeBSD__) && __FreeBSD_version < 701104 && \
+    (_POSIX_SEMAPHORES+0) == -1
 #define HAVE_BROKEN_POSIX_SEMAPHORES
 #else
 #include <semaphore.h>
@@ -44,7 +49,6 @@
    in default setting.  So the process scope is preferred to get
    enough number of threads to work. */
 #ifdef __FreeBSD__
-#include <osreldate.h>
 #if __FreeBSD_version >= 500000 && __FreeBSD_version < 504101
 #undef PTHREAD_SYSTEM_SCHED_SUPPORTED
 #endif
@@ -149,6 +153,7 @@
 {
     pthread_t th;
     int status;
+    sigset_t set, oset;
 #if defined(THREAD_STACK_SIZE) || defined(PTHREAD_SYSTEM_SCHED_SUPPORTED)
     pthread_attr_t attrs;
 #endif
@@ -177,6 +182,8 @@
 #if defined(PTHREAD_SYSTEM_SCHED_SUPPORTED)
     pthread_attr_setscope(&attrs, PTHREAD_SCOPE_SYSTEM);
 #endif
+    sigfillset(&set);
+    SET_THREAD_SIGMASK(SIG_BLOCK, &set, &oset);

     status = pthread_create(&th,
 #if defined(THREAD_STACK_SIZE) || defined(PTHREAD_SYSTEM_SCHED_SUPPORTED)
@@ -188,6 +195,7 @@
                              (void *)arg
                              );

+    SET_THREAD_SIGMASK(SIG_SETMASK, &oset, NULL);
 #if defined(THREAD_STACK_SIZE) || defined(PTHREAD_SYSTEM_SCHED_SUPPORTED)
     pthread_attr_destroy(&attrs);
 #endif
EOF

} #patch_python273_freebsd


# Патч под Ubuntu 14.04
patch_python273_ubuntu_1404()
{
patch -p0 << 'EOF'
--- setup.py.orig	2014-08-20 16:38:02.451041631 +0400
+++ setup.py	2014-08-20 16:38:44.979042992 +0400
@@ -429,6 +429,7 @@
         lib_dirs = self.compiler.library_dirs + [
             '/lib64', '/usr/lib64',
             '/lib', '/usr/lib',
+            '/usr/lib/x86_64-linux-gnu'
             ]
         inc_dirs = self.compiler.include_dirs + ['/usr/include']
         exts = []
EOF
}


remove_dirs

cd $inst_dir

if [ ! -e $python_arch ]; then
    url=https://www.python.org/ftp/python/${ver}/Python-${ver}.tgz
    wget --no-check-certificate $url
fi

if [ ! -e $setuptools_arch ]; then
    url=https://pypi.python.org/packages/source/s/setuptools/$setuptools_arch
    wget --no-check-certificate $url
fi

if [ ! -e $suds_arch ]; then
    url=https://pypi.python.org/packages/source/s/suds/$suds_arch
    wget --no-check-certificate $url
fi

if [ ! -e $simplejson_arch ]; then
    url=https://pypi.python.org/packages/source/s/simplejson/$simplejson_arch
    wget --no-check-certificate $url
fi

if [ ! -e $yapsy_arch ]; then
    url=https://pypi.python.org/packages/source/Y/Yapsy/$yapsy_arch
    wget --no-check-certificate $url
fi


echo "Extract $python_arch ..."
tar -xf $python_arch

echo "Extract $setuptools_arch ..."
tar -xf $setuptools_arch

echo "Extract $suds_arch ..."
tar -xf $suds_arch

echo "Extract $simplejson_arch ..."
tar -xf $simplejson_arch

echo "Extract $yapsy_arch ..."
tar -xf $yapsy_arch

[ -e $dest_dir ] && rm -rf $dest_dir

cd $python_dir

# Патчим Python под FreeBSD
echo "Patching a Python ..."
if [ "$os_type" = "FreeBSD" ]; then
    patch_python273_freebsd
else
    patch_python273_ubuntu_1404
fi


#sed "s/SOVERSION=1.0/SOVERSION=${sover}/" -i configure
sed "s/SOVERSION=1.0/SOVERSION=${sover}/" configure > configure_tmp
mv -f configure_tmp configure
chmod +x configure

# Не поддерживаем файлы больших размеров
# sed "s/use_lfs=yes/use_lfs=no/" -i configure.in



./configure \
    --prefix=$dest_dir \
    --enable-unicode=ucs4 \
    --enable-shared \
    --with-threads \
    LDFLAGS='-Wl,-z,origin -Wl,-rpath,\$$ORIGIN:\$$ORIGIN/../lib:\$$ORIGIN/../../lib:\$$ORIGIN/../..:\$$ORIGIN/../../.. -L '${inst_dir}'/'${python_dir}

    #LDFLAGS='-Wl,-rpath,./:\$$ORIGIN/../lib:\$$ORIGIN/../../lib:\$$ORIGIN/../../:\$$ORIGIN/../../../ -Wl,-rpath-link,'$inst_dir'/'$python_dir
    #LDFLAGS=-Wl,-rpath,':\$$ORIGIN/../lib:\$$ORIGIN/../../lib'

make -j4
make install


# Удаление отладочной информации
cd $dest_dir/lib
[ -e libpython2.7.so.${sover} ] && strip --strip-debug libpython2.7.so.${sover}
for f in $(find ./lib/python2.7 -name '*.so' -type f); do
    strip --strip-debug $f
done

# Блоктровка дублирующихся define-параметров
cd $dest_dir/include/python${ver0}
sed -e "s:^#define _POSIX_C_SOURCE:// #define _POSIX_C_SOURCE:" \
    -e "s:^#define _XOPEN_SOURCE:// #define _XOPEN_SOURCE:" \
    pyconfig.h > pyconfig.h_tmp
mv -f pyconfig.h_tmp pyconfig.h


# Запуск тестов
# cd $dest_dir
# LD_LIBRARY_PATH=/opt/python/2.7.8/lib \
# ./bin/python -Wd -3 -E -tt  ./lib/python2.7/test/regrtest.py -l  --exclude test_gdb


# Установка setuptools-инсталлятора
#[ ! -e $dest_dir/bin/easy_install ] && \
#    wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py -O - | $dest_dir/bin/python
cd $inst_dir/$setuptools_dir
$dest_dir/bin/python setup.py build
$dest_dir/bin/python setup.py install


# Примечание: при установке дополнительных питон-модулей нужно учитывать тот факт,
# что создаваемые в результате сборки модуля so-файлы должны располагаться либо
# в стандартной директории lib/python2.7/lib-dynload, либо в субдиректории не
# ниже третьего уровня вложенности относительно папки lib. Это связано с путями
# (rpath), прописанными в параметре LDFLAGS (см. выше).
# Например, при установке модуля simplejson собирается библиотека _speedups.so,
# при этом модуль устанавливается в lib/python2.7/site-packages/simplejson.
# В этом случае _speedups.so может "видеть" питон движок libpython2.7.so.x
# (см. ldd _speedups.so).
# Если для установки модуля требуется более глубокий уровень вложенности, то
# необходимо в rpath добавить соответствующий путь.

# Установка suds-модуля
cd $inst_dir/$suds_dir
$dest_dir/bin/python setup.py build
$dest_dir/bin/python setup.py install_lib

# Установка simplejson-модуля
cd $inst_dir/$simplejson_dir
$dest_dir/bin/python setup.py build
$dest_dir/bin/python setup.py install_lib

# Установка yapsy-модуля
cd $inst_dir/$yapsy_dir
$dest_dir/bin/python setup.py build
$dest_dir/bin/python setup.py install_lib

# Проверка корректности линковки питон-so-модулей с движком libpython2.7.so.x
set +e
bad_link=no
cd $dest_dir
for f in $(find ./lib/python2.7 -name '*.so' -type f); do
    res=$(ldd $f | grep -E "libpython2\.7\.so\.${sover}.*=>.*not found")
    if [ "x$res" != "x" ]; then
        bad_link=yes
        echo "Error: Bad link to libpython2.7.so.${sover} : ${f}\t$res"
    fi
    res=$(ldd $f | grep -E "libpython2\.7\.so\.1\.0.*=>.*libpython2\.7\.so\.1\.0")
    if [ "x$res" != "x" ]; then
        bad_link=yes
        echo "Error: Bad link to libpython2.7.so.${sover} : ${f}\t$res"
    fi
done

if [ "$bad_link" = "yes" ]; then
    echo "Installation is failed"
    exit 1
fi

set -e

remove_dirs


